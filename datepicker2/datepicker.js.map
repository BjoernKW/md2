{"version":3,"file":"datepicker.js","sourceRoot":"","sources":["../../../src/lib/datepicker2/datepicker.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ComponentRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { Overlay } from '../core/overlay/overlay';\nimport { OverlayRef } from '../core/overlay/overlay-ref';\nimport { ComponentPortal } from '../core/portal/portal';\nimport { OverlayState } from '../core/overlay/overlay-state';\nimport { Dir } from '../core/rtl/dir';\nimport { MdError } from '../core/errors/error';\nimport { PositionStrategy } from '../core/overlay/position/position-strategy';\nimport {\n  OriginConnectionPosition,\n  OverlayConnectionPosition\n} from '../core/overlay/position/connected-position';\nimport { MdDatepickerInput } from './datepicker-input';\nimport 'rxjs/add/operator/first';\nimport { Subscription } from 'rxjs/Subscription';\nimport { DateAdapter } from './date-adapter';\nimport { createMissingDateImplError } from './datepicker-errors';\nimport { ESCAPE } from '../core/keyboard/keycodes';\nimport { MdCalendar } from './calendar';\n\n\n/** Used to generate a unique ID for each datepicker instance. */\nlet datepickerUid = 0;\n\n\n/**\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\n * MdCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the popup that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * @docs-internal\n */\n@Component({\n  moduleId: module.id,\n  selector: 'md2-datepicker-content',\n  templateUrl: 'datepicker-content.html',\n  styleUrls: ['datepicker-content.css'],\n  host: {\n    'class': 'md2-datepicker-content',\n    '[class.md2-datepicker-content-touch]': 'datepicker.touchUi',\n    '(keydown)': '_handleKeydown($event)',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MdDatepickerContent<D> implements AfterContentInit {\n  datepicker: MdDatepicker<D>;\n\n  @ViewChild(MdCalendar) _calendar: MdCalendar<D>;\n\n  ngAfterContentInit() {\n    this._calendar._focusActiveCell();\n  }\n\n  /**\n   * Handles keydown event on datepicker content.\n   * @param event The event.\n   */\n  _handleKeydown(event: KeyboardEvent): void {\n    switch (event.keyCode) {\n      case ESCAPE:\n        this.datepicker.close();\n        break;\n      default:\n        // Return so that we don't preventDefault on keys that are not explicitly handled.\n        return;\n    }\n\n    event.preventDefault();\n  }\n}\n\n\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"mdDatepicker\"). We can change this to a directive if\n// angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the datepicker popup/dialog. */\n@Component({\n  moduleId: module.id,\n  selector: 'md-datepicker',\n  template: '',\n})\nexport class MdDatepicker<D> implements OnDestroy {\n  /** The date to open the calendar to initially. */\n  @Input()\n  get startAt(): D {\n    // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n    // selected value is.\n    return this._startAt || (this._datepickerInput ? this._datepickerInput.value : null);\n  }\n  set startAt(date: D) { this._startAt = date; }\n  private _startAt: D;\n\n  /** The view that the calendar should start in. */\n  @Input() startView: 'month' | 'year' = 'month';\n\n  /**\n   * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\n   * than a popup and elements have more padding to allow for bigger touch targets.\n   */\n  @Input() touchUi = false;\n\n  /** A function used to filter which dates are selectable. */\n  @Input()\n  dateFilter: (date: D) => boolean;\n\n  /** Emits new selected date when selected date changes. */\n  @Output() selectedChanged = new EventEmitter<D>();\n\n  /** Whether the calendar is open. */\n  opened = false;\n\n  /** The id for the datepicker calendar. */\n  id = `md-datepicker-${datepickerUid++}`;\n\n  /** The currently selected date. */\n  _selected: D = null;\n\n  /** The minimum selectable date. */\n  get _minDate(): D {\n    return this._datepickerInput && this._datepickerInput.min;\n  }\n\n  /** The maximum selectable date. */\n  get _maxDate(): D {\n    return this._datepickerInput && this._datepickerInput.max;\n  }\n\n  get _dateFilter(): (date: D | null) => boolean {\n    return this._datepickerInput && this._datepickerInput._dateFilter;\n  }\n\n  /** A reference to the overlay when the calendar is opened as a popup. */\n  private _popupRef: OverlayRef;\n\n  /** A portal containing the calendar for this datepicker. */\n  private _calendarPortal: ComponentPortal<MdDatepickerContent<D>>;\n\n  /** The input element this datepicker is associated with. */\n  private _datepickerInput: MdDatepickerInput<D>;\n\n  private _inputSubscription: Subscription;\n\n  constructor(private _overlay: Overlay,\n    private _viewContainerRef: ViewContainerRef,\n    @Optional() private _dateAdapter: DateAdapter<D>,\n    @Optional() private _dir: Dir) {\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n\n  }\n\n  ngOnDestroy() {\n    this.close();\n    if (this._popupRef) {\n      this._popupRef.dispose();\n    }\n    if (this._inputSubscription) {\n      this._inputSubscription.unsubscribe();\n    }\n  }\n\n  /** Selects the given date and closes the currently open popup or dialog. */\n  _selectAndClose(date: D): void {\n    let oldValue = this._selected;\n    this._selected = date;\n    if (!this._dateAdapter.sameDate(oldValue, this._selected)) {\n      this.selectedChanged.emit(date);\n    }\n    this.close();\n  }\n\n  /**\n   * Register an input with this datepicker.\n   * @param input The datepicker input to register with this datepicker.\n   */\n  _registerInput(input: MdDatepickerInput<D>): void {\n    if (this._datepickerInput) {\n      throw new MdError('An MdDatepicker can only be associated with a single input.');\n    }\n    this._datepickerInput = input;\n    this._inputSubscription =\n      this._datepickerInput._valueChange.subscribe((value: D) => this._selected = value);\n  }\n\n  /** Open the calendar. */\n  open(): void {\n    if (this.opened) {\n      return;\n    }\n    if (!this._datepickerInput) {\n      throw new MdError('Attempted to open an MdDatepicker with no associated input.');\n    }\n\n    //this.touchUi ? this._openAsDialog() :\n    this._openAsPopup();\n    this.opened = true;\n  }\n\n  /** Close the calendar. */\n  close(): void {\n    if (!this.opened) {\n      return;\n    }\n    if (this._popupRef && this._popupRef.hasAttached()) {\n      this._popupRef.detach();\n    }\n    //if (this._dialogRef) {\n    //  this._dialogRef.close();\n    //  this._dialogRef = null;\n    //}\n    if (this._calendarPortal && this._calendarPortal.isAttached) {\n      this._calendarPortal.detach();\n    }\n    this.opened = false;\n  }\n\n  /** Open the calendar as a dialog. */\n  //private _openAsDialog(): void {\n  //  let config = new MdDialogConfig();\n  //  config.viewContainerRef = this._viewContainerRef;\n\n  //  this._dialogRef = this._dialog.open(MdDatepickerContent, config);\n  //  this._dialogRef.afterClosed().first().subscribe(() => this.close());\n  //  this._dialogRef.componentInstance.datepicker = this;\n  //}\n\n  /** Open the calendar as a popup. */\n  private _openAsPopup(): void {\n    if (!this._calendarPortal) {\n      this._calendarPortal = new ComponentPortal(MdDatepickerContent, this._viewContainerRef);\n    }\n\n    if (!this._popupRef) {\n      this._createPopup();\n    }\n\n    if (!this._popupRef.hasAttached()) {\n      let componentRef: ComponentRef<MdDatepickerContent<D>> =\n        this._popupRef.attach(this._calendarPortal);\n      componentRef.instance.datepicker = this;\n    }\n\n    this._popupRef.backdropClick().first().subscribe(() => this.close());\n  }\n\n  /** Create the popup. */\n  private _createPopup(): void {\n    const overlayState = new OverlayState();\n    overlayState.positionStrategy = this._createPopupPositionStrategy();\n    overlayState.hasBackdrop = true;\n    overlayState.backdropClass = 'md-overlay-transparent-backdrop';\n    overlayState.direction = this._dir ? this._dir.value : 'ltr';\n\n    this._popupRef = this._overlay.create(overlayState);\n  }\n\n  /** Create the popup PositionStrategy. */\n  private _createPopupPositionStrategy(): PositionStrategy {\n    let origin = { originX: 'start', originY: 'bottom' } as OriginConnectionPosition;\n    let overlay = { overlayX: 'start', overlayY: 'top' } as OverlayConnectionPosition;\n    return this._overlay.position().connectedTo(\n      this._datepickerInput.getPopupConnectionElementRef(), origin, overlay);\n  }\n}\n"]}