{"version":3,"file":"datepicker-input.js","sourceRoot":"","sources":["../../../src/lib/datepicker2/datepicker-input.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  AfterContentInit,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  OnDestroy,\n  Optional,\n  Renderer2\n} from '@angular/core';\nimport { MdDatepicker } from './datepicker';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  NG_VALIDATORS,\n  NG_VALUE_ACCESSOR,\n  ValidationErrors,\n  Validator,\n  ValidatorFn,\n  Validators\n} from '@angular/forms';\nimport { Subscription } from 'rxjs/Subscription';\nimport { DOWN_ARROW } from '../core/keyboard/keycodes';\nimport { DateAdapter } from './date-adapter';\nimport { createMissingDateImplError } from './datepicker-errors';\nimport { MD_DATE_FORMATS, MdDateFormats } from './date-formats';\n\n\nexport const MD_DATEPICKER_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MdDatepickerInput),\n  multi: true\n};\n\n\nexport const MD_DATEPICKER_VALIDATORS: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => MdDatepickerInput),\n  multi: true\n};\n\n\n/** Directive used to connect an input to a MdDatepicker. */\n@Directive({\n  selector: 'input[mdDatepicker], input[matDatepicker]',\n  providers: [MD_DATEPICKER_VALUE_ACCESSOR, MD_DATEPICKER_VALIDATORS],\n  host: {\n    '[attr.aria-expanded]': '_datepicker?.opened || \"false\"',\n    '[attr.aria-haspopup]': 'true',\n    '[attr.aria-owns]': '_datepicker?.id',\n    '[attr.min]': 'min ? _dateAdapter.getISODateString(min) : null',\n    '[attr.max]': 'max ? _dateAdapter.getISODateString(max) : null',\n    '(input)': '_onInput($event.target.value)',\n    '(blur)': '_onTouched()',\n    '(keydown)': '_onKeydown($event)',\n  }\n})\nexport class MdDatepickerInput<D> implements AfterContentInit, ControlValueAccessor, OnDestroy,\n  Validator {\n  /** The datepicker that this input is associated with. */\n  @Input()\n  set mdDatepicker(value: MdDatepicker<D>) {\n    if (value) {\n      this._datepicker = value;\n      this._datepicker._registerInput(this);\n    }\n  }\n  _datepicker: MdDatepicker<D>;\n\n  @Input() set matDatepicker(value: MdDatepicker<D>) { this.mdDatepicker = value; }\n\n  @Input() set mdDatepickerFilter(filter: (date: D | null) => boolean) {\n    this._dateFilter = filter;\n    this._validatorOnChange();\n  }\n  _dateFilter: (date: D | null) => boolean;\n\n  @Input() set matDatepickerFilter(filter: (date: D | null) => boolean) {\n    this.mdDatepickerFilter = filter;\n  }\n\n  /** The value of the input. */\n  @Input()\n  get value(): D {\n    return this._dateAdapter.parse(this._elementRef.nativeElement.value,\n      this._dateFormats.parse.dateInput);\n  }\n  set value(value: D) {\n    let date = this._dateAdapter.parse(value, this._dateFormats.parse.dateInput);\n    let oldDate = this.value;\n    this._renderer.setProperty(this._elementRef.nativeElement, 'value',\n      date ? this._dateAdapter.format(date, this._dateFormats.display.dateInput) : '');\n    if (!this._dateAdapter.sameDate(oldDate, date)) {\n      this._valueChange.emit(date);\n    }\n  }\n\n  /** The minimum valid date. */\n  @Input()\n  get min(): D { return this._min; }\n  set min(value: D) {\n    this._min = value;\n    this._validatorOnChange();\n  }\n  private _min: D;\n\n  /** The maximum valid date. */\n  @Input()\n  get max(): D { return this._max; }\n  set max(value: D) {\n    this._max = value;\n    this._validatorOnChange();\n  }\n  private _max: D;\n\n  /** Emits when the value changes (either due to user input or programmatic change). */\n  _valueChange = new EventEmitter<D>();\n\n  _onTouched = () => { };\n\n  private _cvaOnChange = (value: any) => { };\n\n  private _validatorOnChange = () => { };\n\n  private _datepickerSubscription: Subscription;\n\n  /** The form control validator for the min date. */\n  private _minValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    return (!this.min || !control.value ||\n      this._dateAdapter.compareDate(this.min, control.value) < 0) ?\n      null : { 'mdDatepickerMin': { 'min': this.min, 'actual': control.value } };\n  }\n\n  /** The form control validator for the max date. */\n  private _maxValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    return (!this.max || !control.value ||\n      this._dateAdapter.compareDate(this.max, control.value) > 0) ?\n      null : { 'mdDatepickerMax': { 'max': this.max, 'actual': control.value } };\n  }\n\n  /** The form control validator for the date filter. */\n  private _filterValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    return !this._dateFilter || !control.value || this._dateFilter(control.value) ?\n      null : { 'mdDatepickerFilter': true };\n  }\n\n  /** The combined form control validator for this input. */\n  private _validator: ValidatorFn =\n  Validators.compose([this._minValidator, this._maxValidator, this._filterValidator]);\n\n  constructor(\n    private _elementRef: ElementRef,\n    private _renderer: Renderer2,\n    @Optional() private _dateAdapter: DateAdapter<D>,\n    @Optional() @Inject(MD_DATE_FORMATS) private _dateFormats: MdDateFormats) {\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n    if (!this._dateFormats) {\n      throw createMissingDateImplError('MD_DATE_FORMATS');\n    }\n  }\n\n  ngAfterContentInit() {\n    if (this._datepicker) {\n      this._datepickerSubscription =\n        this._datepicker.selectedChanged.subscribe((selected: D) => {\n          this.value = selected;\n          this._cvaOnChange(selected);\n        });\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._datepickerSubscription) {\n      this._datepickerSubscription.unsubscribe();\n    }\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this._validatorOnChange = fn;\n  }\n\n  validate(c: AbstractControl): ValidationErrors | null {\n    return this._validator ? this._validator(c) : null;\n  }\n\n  /**\n   * Gets the element that the datepicker popup should be connected to.\n   * @return The element to connect the popup to.\n   */\n  getPopupConnectionElementRef(): ElementRef {\n    return this._elementRef;\n  }\n\n  // Implemented as part of ControlValueAccessor\n  writeValue(value: D): void {\n    this.value = value;\n  }\n\n  // Implemented as part of ControlValueAccessor\n  registerOnChange(fn: (value: any) => void): void {\n    this._cvaOnChange = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor\n  registerOnTouched(fn: () => void): void {\n    this._onTouched = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor\n  setDisabledState(disabled: boolean): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', disabled);\n  }\n\n  _onKeydown(event: KeyboardEvent) {\n    if (event.altKey && event.keyCode === DOWN_ARROW) {\n      this._datepicker.open();\n      event.preventDefault();\n    }\n  }\n\n  _onInput(value: string) {\n    let date = this._dateAdapter.parse(value, this._dateFormats.parse.dateInput);\n    this._cvaOnChange(date);\n    this._valueChange.emit(date);\n  }\n}\n"]}